require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

# Avoid duplicate symbols by setting this to 1
ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

# Explicitly disable duplicate React installation
ENV['USE_FRAMEWORKS'] = 'static'

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

# Define a pre_install hook to exclude problematic pods
pre_install do |installer|
  # Exclude RNAWSCognito to avoid header file issues
  installer.pod_targets.each do |pod|
    if pod.name == 'RNAWSCognito'
      pod.specs.each do |spec|
        spec.attributes_hash['exclude_files'] = ['**/*']
      end
    end
  end
end

target 'drycleanposapp' do
  use_expo_modules!

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()" ];
  else
    config_command = [
      'node',
      '--no-warnings',
      '--eval',
      'require(require.resolve(\'expo-modules-autolinking\' , { paths: [require.resolve(\'expo/package.json\')] }))(process.argv.slice(1))',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
  end

  config = use_native_modules!(config_command)

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  # Temporarily commenting out RNAWSCognito to troubleshoot build issues
  # pod 'RNAWSCognito', :path => '../node_modules/amazon-cognito-identity-js', :modular_headers => true, :inhibit_warnings => true do |aws_cognito|
  #   aws_cognito.exclude_files = '**/*.{h,m}'
  # end

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  # Use the local podspec for your Brother Printer Module
  # Ensure BrotherPrinterModule.podspec correctly links BRLMPrinterKit.xcframework using s.vendored_frameworks
  # pod 'BrotherPrinterModule', :path => 'BrotherPrinterModule.podspec'

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # Fix AWS Cognito header issues
    installer.pods_project.targets.each do |target|
      if target.name == 'RNAWSCognito'
        target.build_configurations.each do |config|
          # Add the JKBigInteger directory to the header search paths
          config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
          config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/../../node_modules/amazon-cognito-identity-js/ios'
          config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/../../node_modules/amazon-cognito-identity-js/ios/JKBigInteger'
          config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/../../node_modules/amazon-cognito-identity-js/ios/JKBigInteger/LibTomMath'
        end
      end
    end

    # This is necessary for Xcode 14, because it signs resource bundles by default
    # when building for devices.
    installer.target_installation_results.pod_target_installation_results
      .each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end

    # Fix duplicate symbols by setting proper build settings
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1'
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'

        # Add AWS Cognito header search paths
        if target.name == 'RNAWSCognito'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
          config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/../node_modules/amazon-cognito-identity-js/ios/JKBigInteger'
          config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/../node_modules/amazon-cognito-identity-js/ios/JKBigInteger/LibTomMath'
        end
      end
    end
  end
end

